<?xml version="1.0" encoding="UTF-8" ?>

<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
<channel>
   
      <title>bajalovic.github.io</title>
   
   <link>http://esseworks.com</link>
   <description>Personal blog</description>
   <language>en-uk</language>
   <managingEditor> Ivan Bajalović</managingEditor>
   <atom:link href="rss" rel="self" type="application/rss+xml" />
   
	<item>
	  <title>Rails Engine Intro</title>
	  <link>/bajalovic/2015/11/10/rails-engine-intro.html</link>
	  <author>Ivan Bajalović</author>
	  <pubDate>2015-11-10T00:38:00+01:00</pubDate>
	  <guid>/bajalovic/2015/11/10/rails-engine-intro.html</guid>
	  <description><![CDATA[
	     <p>You probably already used a lot of gems that are actually a rails engine, e.g. <code>ActiveAdmin</code>, <code>Devise</code>, <code>Forem</code>, <code>Spree</code>, ...</p>

<p>I needed to create an independent part on my previous project, and it should not share the resources with the rest of the project. Initially, I thoght to create just a namespace, put controllers, views inside and use it like that. But then, I noticed that I should separate my assets, so this subproject do not load unnecessary javascript/css files. </p>

<p>Then I remembered, Rails engine will do the trick. It works as a gem, that you can use inside your app, by requiring it in <code>Gemfile</code>.</p>
<div class="highlight"><pre><code class="language-text" data-lang="text">$ cd myapp
$ rails plugin new admin --mountable
</code></pre></div>
<p>This will generate a <code>admin/</code> directory inside your <code>myapp</code> directory. It will contain <code>app</code>, <code>bin</code>, <code>config</code>, <code>lib</code>, <code>test</code> folders and <code>Gemfile</code>, <code>Rakefile</code> and <code>admin.gemspec</code>.</p>

<p>Edit your gemspec file. Initially, you will have &quot;TODO&quot; texts. In order to run <code>bundle install</code> you must remove &quot;TODO&quot; or &quot;FIXME&quot; form gemspec file.</p>

<p>Next, open your <code>Gemfile</code> and add:</p>
<div class="highlight"><pre><code class="language-text" data-lang="text">gem &#39;admin&#39;, path: &#39;admin&#39;
</code></pre></div>
<p>This will load your plugin as a gem. Now, we need to tell the router which url to point to our plugin. Run <code>bundle install</code>.</p>
<div class="highlight"><pre><code class="language-ruby" data-lang="ruby"><span class="n">mount</span> <span class="no">Admin</span><span class="o">::</span><span class="no">Engine</span><span class="p">,</span> <span class="ss">at</span><span class="p">:</span> <span class="s2">&quot;/admin/&quot;</span>
</code></pre></div>
<p>Lets create <code>welcome_controller.rb</code> inside the <code>myapp/admin/app/controllers/admin/welcome_controller.rb</code>. </p>
<div class="highlight"><pre><code class="language-ruby" data-lang="ruby"><span class="k">class</span> <span class="nc">Admin</span><span class="o">::</span><span class="no">WelcomeController</span> <span class="o">&lt;</span> <span class="no">Admin</span><span class="o">::</span><span class="no">ApplicationController</span>

    <span class="k">def</span> <span class="nf">index</span>
    <span class="k">end</span>
<span class="k">end</span>
</code></pre></div>
<p>and appropriate view located at <code>myapp/admin/app/views/admin/welcome/index.html.erb</code>.</p>
<div class="highlight"><pre><code class="language-ruby" data-lang="ruby"><span class="o">&lt;</span><span class="n">h1</span><span class="o">&gt;</span><span class="no">Hello</span> <span class="no">World</span><span class="o">!&lt;</span><span class="sr">/h1&gt;</span>
</code></pre></div>
<p>Open <code>myapp/admin/config/routes.rb</code> and set root:</p>
<div class="highlight"><pre><code class="language-ruby" data-lang="ruby"><span class="no">Admin</span><span class="o">::</span><span class="no">Engine</span><span class="o">.</span><span class="n">routes</span><span class="o">.</span><span class="n">draw</span> <span class="k">do</span>
  <span class="n">root</span> <span class="s1">&#39;welcome#index&#39;</span>
<span class="k">end</span>
</code></pre></div>
<p>Start the server with <code>rails s</code> inside <code>myapp</code> directory, and open <code>http://localhost:3000/admin/</code>. If everything went ok, you should see &quot;Hello World!&quot; message.</p>

<p>You can define models for a engine itself, or you can access the ones from the hosting app.</p>

<p>If you want to use some external gems, you should add a dependency in <code>myapp/admin/admin.gemspec</code>.</p>
<div class="highlight"><pre><code class="language-ruby" data-lang="ruby"><span class="n">s</span><span class="o">.</span><span class="n">add_dependency</span> <span class="s1">&#39;gem_you_want_to_include&#39;</span>
</code></pre></div>
<p>And then, you need to require it in <code>myapp/admin/lib/admin/engine.rb</code> </p>
<div class="highlight"><pre><code class="language-ruby" data-lang="ruby"><span class="nb">require</span> <span class="s1">&#39;gem_you_want_to_include&#39;</span>
</code></pre></div>
<p>Do not forget to run <code>bundle install</code> after these changes.</p>

<p>For further reading, please read <a href="http://guides.rubyonrails.org/engines.html">Getting Started with Engines</a>.</p>

	  ]]></description>
	</item>


</channel>
</rss>
